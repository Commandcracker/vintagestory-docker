---
name: stable

on:
    schedule:
        - cron: "0 12 * * *" # everyday at noon
    push:
        branches:
            - "main"
    workflow_dispatch:
    pull_request:
        branches:
            - "main"

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    generate-matrix:
        runs-on: ubuntu-latest
        outputs:
          matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
          - name: Checkout 🛎️
            uses: actions/checkout@v4
    
          - name: Generate matrix ⚙️
            id: set-matrix
            run: |
              MATRIX=$(python generate_matrix.py)
              echo "matrix=$MATRIX" >> $GITHUB_ENV
              echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

    print-tag:
        needs: generate-matrix
        runs-on: ubuntu-latest
        strategy:
            matrix: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
        steps:
            - name: Checkout 🛎️
              uses: actions/checkout@v4

            - name: Login to container registry 🔐
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata 🏷️
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                    type=raw,value=${{ matrix.VS_VERSION }}
                    type=raw,value=${{ matrix.VS_TYPE }}

            - name: 🔨 Build and Publish 🚀
              uses: docker/build-push-action@v6
              with:
                  push: ${{ github.event_name != 'pull_request' }}
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  build-args: |
                    VS_VERSION=${{ matrix.VS_VERSION }}
                    VS_TYPE=${{ matrix.VS_TYPE }}
...
